name: cpp env

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cpp-env

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read
  
    steps:
      # SETUP
      - name: Echo
        run: echo "Hello github actions!!"
      - name: Source checkout
        uses: actions/checkout@v4
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # DOCKER BUILD
      - name: Build docker image for checking compile
        run: docker build -t cpp-image -f cpp/Dockerfile cpp
      - name: Show g++ version inside container
        run: docker run --rm cpp-image g++ --version

      # COMPILE TEST
      - name: Compile HelloWorld.cpp
        run: |
          docker run --rm -w /cpp/HelloWorld cpp-image \
            bash -c "g++ HelloWorld.cpp -o HelloWorld && ./HelloWorld"

      # PUSH IMAGE
      - name: Container build and push when workflow_dispatch
        if: github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v5
        with:
          context: ./cpp
          file: ./cpp/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME}}:latest
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME}}
            org.opencontainers.image.version=1.0
            org.opencontainers.image.description=HelloWorld C++ app
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.authors=${{ github.actor }}
      
      # TEST DOCKER COMPOSE
      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v3

      - name: Docker compose build 
        run: docker compose -f /cpp/docker-compose.yaml up --build --abort-on-container-exit
